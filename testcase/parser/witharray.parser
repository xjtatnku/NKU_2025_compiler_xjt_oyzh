ASTree
|-- FuncDecl sum(int a[], int n) -> int, line: 1
|   `-- BlockStmt, line: 2
|       |-- VarDeclStmt
|       |   `-- VarDeclaration, BaseType: int
|       |       `-- VarDeclarator
|       |           `-- Var: 
|       |               `-- LeftValueExpr i
|       |-- VarDeclStmt
|       |   `-- VarDeclaration, BaseType: int
|       |       `-- VarDeclarator
|       |           |-- Var: 
|       |           |   `-- LeftValueExpr sum
|       |           `-- Init: 
|       |               `-- Initializer
|       |                   `-- literal int: 0
|       |-- ExprStmt line: 6
|       |   `-- BinaryExpr =
|       |       |-- LeftValueExpr i
|       |       `-- literal int: 0
|       |-- WhileStmt
|       |   |-- Condition:
|       |   |   `-- BinaryExpr <
|       |   |       |-- LeftValueExpr i
|       |   |       `-- LeftValueExpr n
|       |   `-- Body:
|       |       `-- BlockStmt, line: 8
|       |           |-- ExprStmt line: 9
|       |           |   `-- BinaryExpr =
|       |           |       |-- LeftValueExpr sum
|       |           |       `-- BinaryExpr +
|       |           |           |-- LeftValueExpr sum
|       |           |           `-- LeftValueExpr a
|       |           |               `-- LeftValueExpr i
|       |           `-- ExprStmt line: 10
|       |               `-- BinaryExpr =
|       |                   |-- LeftValueExpr i
|       |                   `-- BinaryExpr +
|       |                       |-- LeftValueExpr i
|       |                       `-- literal int: 1
|       `-- ReturnStmt
|           `-- LeftValueExpr sum
|-- FuncDecl max(int a[10], int n) -> int, line: 15
|   `-- BlockStmt, line: 16
|       |-- VarDeclStmt
|       |   `-- VarDeclaration, BaseType: int
|       |       `-- VarDeclarator
|       |           `-- Var: 
|       |               `-- LeftValueExpr i
|       |-- VarDeclStmt
|       |   `-- VarDeclaration, BaseType: int
|       |       `-- VarDeclarator
|       |           |-- Var: 
|       |           |   `-- LeftValueExpr max
|       |           `-- Init: 
|       |               `-- Initializer
|       |                   `-- LeftValueExpr a
|       |                       `-- literal int: 0
|       |-- ExprStmt line: 20
|       |   `-- BinaryExpr =
|       |       |-- LeftValueExpr i
|       |       `-- literal int: 1
|       |-- WhileStmt
|       |   |-- Condition:
|       |   |   `-- BinaryExpr <
|       |   |       |-- LeftValueExpr i
|       |   |       `-- LeftValueExpr n
|       |   `-- Body:
|       |       `-- BlockStmt, line: 22
|       |           |-- IfStmt
|       |           |   |-- Condition:
|       |           |   |   `-- BinaryExpr >
|       |           |   |       |-- LeftValueExpr a
|       |           |   |       |   `-- LeftValueExpr i
|       |           |   |       `-- LeftValueExpr max
|       |           |   |-- Then:
|       |           |   |   `-- ExprStmt line: 23
|       |           |   |       `-- BinaryExpr =
|       |           |   |           |-- LeftValueExpr max
|       |           |   |           `-- LeftValueExpr a
|       |           |   |               `-- LeftValueExpr i
|       |           `-- ExprStmt line: 24
|       |               `-- BinaryExpr =
|       |                   |-- LeftValueExpr i
|       |                   `-- BinaryExpr +
|       |                       |-- LeftValueExpr i
|       |                       `-- literal int: 1
|       `-- ReturnStmt
|           `-- LeftValueExpr max
`-- FuncDecl main() -> int, line: 29
    `-- BlockStmt, line: 30
        |-- VarDeclStmt
        |   `-- VarDeclaration, BaseType: int
        |       `-- VarDeclarator
        |           `-- Var: 
        |               `-- LeftValueExpr arr
        |                   |-- literal int: 10
        |                   `-- literal int: 10
        |-- VarDeclStmt
        |   `-- VarDeclaration, BaseType: int
        |       |-- VarDeclarator
        |       |   |-- Var: 
        |       |   |   `-- LeftValueExpr i
        |       |   `-- Init: 
        |       |       `-- Initializer
        |       |           `-- literal int: 0
        |       `-- VarDeclarator
        |           |-- Var: 
        |           |   `-- LeftValueExpr j
        |           `-- Init: 
        |               `-- Initializer
        |                   `-- literal int: 0
        |-- WhileStmt
        |   |-- Condition:
        |   |   `-- BinaryExpr <
        |   |       |-- LeftValueExpr i
        |   |       `-- literal int: 10
        |   `-- Body:
        |       `-- BlockStmt, line: 35
        |           |-- ExprStmt line: 36
        |           |   `-- BinaryExpr =
        |           |       |-- LeftValueExpr j
        |           |       `-- literal int: 0
        |           |-- WhileStmt
        |           |   |-- Condition:
        |           |   |   `-- BinaryExpr <
        |           |   |       |-- LeftValueExpr j
        |           |   |       `-- literal int: 10
        |           |   `-- Body:
        |           |       `-- BlockStmt, line: 38
        |           |           |-- ExprStmt line: 39
        |           |           |   `-- BinaryExpr =
        |           |           |       |-- LeftValueExpr arr
        |           |           |       |   |-- LeftValueExpr i
        |           |           |       |   `-- LeftValueExpr j
        |           |           |       `-- BinaryExpr +
        |           |           |           |-- LeftValueExpr i
        |           |           |           `-- LeftValueExpr j
        |           |           `-- ExprStmt line: 40
        |           |               `-- BinaryExpr =
        |           |                   |-- LeftValueExpr j
        |           |                   `-- BinaryExpr +
        |           |                       |-- LeftValueExpr j
        |           |                       `-- literal int: 1
        |           `-- ExprStmt line: 42
        |               `-- BinaryExpr =
        |                   |-- LeftValueExpr i
        |                   `-- BinaryExpr +
        |                       |-- LeftValueExpr i
        |                       `-- literal int: 1
        `-- ReturnStmt
            `-- BinaryExpr +
                |-- Call sum
                |   |-- Arg 0: 
                |   |   `-- LeftValueExpr arr
                |   `-- Arg 1: 
                |       `-- literal int: 100
                `-- Call max
                    |-- Arg 0: 
                    |   `-- LeftValueExpr arr
                    |       `-- literal int: 0
                    `-- Arg 1: 
                        `-- literal int: 10
